name: Download Mastodon Timeline

on:
  schedule:
    # 毎日午前3時（UTC）に実行
    # 日本時間（JST）では、UTC+9なので午前12時（深夜）に実行されます
    - cron: '0 3 * * *'
  workflow_dispatch: # 手動実行も可能にする

jobs:
  download_timeline:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # 使用するNode.jsのバージョンを指定

      - name: Install dependencies
        run: npm install your-mastodon-api-library # 使用するNode.jsライブラリのインストール

      - name: Download and record timeline
        env:
          MASTODON_ACCESS_TOKEN: ${{ secrets.MASTODON_ACCESS_TOKEN_YAKIIMOBREAD }}
          MASTODON_INSTANCE_URL: ${{ vars.MASTODON_JP_URL }} # これもSecretにすること推奨
        run: |
          # ここにタイムラインをダウンロードしてファイルに保存するスクリプトを実行
          # 例: node scripts/download_timeline.js
          # スクリプト内で env.MASTODON_ACCESS_TOKEN と env.MASTODON_INSTANCE_URL を使用する
          # ダウンロードしたデータをファイルに書き込み（例: timeline.json）
          # Gitにコミット・プッシュするコマンドを実行
          echo "Downloading Mastodon timeline..."
          node -e "
            const fs = require('fs');
            const Mastodon = require('mastodon-api'); // 例としてmastodon-apiライブラリを使用
            const instanceUrl = process.env.MASTODON_INSTANCE_URL;
            const accessToken = process.env.MASTODON_ACCESS_TOKEN;

            if (!instanceUrl || !accessToken) {
              console.error('Mastodon instance URL or access token not found in environment variables.');
              process.exit(1);
            }

            const M = new Mastodon({
              access_token: accessToken,
              api_url: \`https://\${instanceUrl}/api/v1/\`
            });

            M.get('timelines/home', {}) // ホームタイムラインの例
              .then(resp => {
                const timeline = resp.data;
                const timestamp = new Date().toISOString().replace(/:/g, '-');
                const filename = \`data/timeline-\${timestamp}.json\`;
                fs.writeFileSync(filename, JSON.stringify(timeline, null, 2));
                console.log(\`Timeline saved to \${filename}\`);
              })
              .catch(err => {
                console.error('Error downloading timeline:', err);
                process.exit(1);
              });
          "

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub Actionsが自動で提供するトークン
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add data/
          git commit -m "Automated Mastodon timeline download: $(date +'%Y-%m-%d %H:%M:%S')" || echo "No changes to commit"
          git push || echo "Nothing to push"
